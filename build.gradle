plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

group = 'me.mats'
version = '1.0'

//Variables
def main = 'me.mats.bingo.Bingo'

repositories {
    mavenCentral()
    maven {
        name = "papermc-repo"
        url = "https://repo.papermc.io/repository/maven-public/"
    }
    maven {
        name = "sonatype"
        url = "https://oss.sonatype.org/content/groups/public/"
    }

    maven {
        name = "codemc-repo"
        url = uri("https://repo.codemc.io/repository/maven-public/")
    }

}

dependencies {
    compileOnly "io.papermc.paper:paper-api:1.20.2-R0.1-SNAPSHOT"
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '5.2.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    compileOnly 'de.tr7zw:item-nbt-api-plugin:2.12.0'
    compileOnly files('X:/Users/matsp/Documents/MinecraftPlugins/Finished Plugins/AdvancementInteraction1.20.2.jar')
}

application {
    mainClass = "$main"
}

// THIN JAR
jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    archiveClassifier.set('thin')
    manifest {
        attributes 'Main-Class': "$main"
    }
}

// FAT JAR
shadowJar {
    archiveClassifier.set('')
    destinationDirectory.set(file('docker/data/plugins'))
}


tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

// Docker Compose-Cleanup
tasks.register('cleanDockerCompose', Exec) {
    workingDir(file('docker'))
    commandLine 'docker-compose', 'stop'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('paper-plugin.yml') {
        expand props
    }
}

// TESTS
test {
    useJUnitPlatform()
}
